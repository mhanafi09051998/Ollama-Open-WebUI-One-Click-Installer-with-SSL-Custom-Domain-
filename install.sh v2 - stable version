#!/bin/bash

# Fungsi untuk menampilkan pesan status
log_message() {
    echo "----------------------------------------------------"
    echo "$1"
    echo "----------------------------------------------------"
}

# --- 1. Instalasi Ollama ---
log_message "Memulai instalasi Ollama..."

# Unduh dan instal Ollama
curl -fsSL https://ollama.com/install.sh | sh

# Verifikasi instalasi Ollama
if command -v ollama &> /dev/null; then
    log_message "Ollama berhasil diinstal."
else
    log_message "Ollama gagal diinstal. Harap periksa log di atas."
    exit 1
fi

# --- 2. Instalasi Docker ---
log_message "Memulai instalasi Docker..."

# Hapus versi Docker lama jika ada
for pkg in docker.io docker-doc docker-compose docker-ce docker-ce-cli containerd.io runc; do sudo apt-get remove $pkg; done

# Perbarui indeks paket apt dan instal paket yang diperlukan
sudo apt-get update
sudo apt-get install ca-certificates curl gnupg -y

# Tambahkan kunci GPG resmi Docker
sudo install -m 0755 -d /etc/apt/keyrings
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
sudo chmod a+r /etc/apt/keyrings/docker.gpg

# Tambahkan repositori Docker ke sumber APT
echo \
  "deb [arch="$(dpkg --print-architecture)" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
  "$(. /etc/os-release && echo "$VERSION_CODENAME")" stable" | \
  sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

# Perbarui indeks paket apt lagi
sudo apt-get update

# Instal Docker Engine, containerd, dan Docker Compose
sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin -y

# Tambahkan pengguna saat ini ke grup docker (agar tidak perlu sudo untuk menjalankan perintah docker)
sudo usermod -aG docker "$USER"

# Verifikasi instalasi Docker
if sudo docker run hello-world &> /dev/null; then
    log_message "Docker berhasil diinstal dan berfungsi."
else
    log_message "Docker gagal diinstal atau tidak berfungsi. Harap periksa log di atas."
    exit 1
fi

log_message "Harap logout dan login kembali atau restart terminal Anda agar perubahan grup Docker berlaku."

# --- 3. Instalasi Open WebUI ---
log_message "Memulai instalasi Open WebUI..."

# Jalankan Open WebUI menggunakan Docker
# Pastikan port 8080 tersedia
sudo docker run -d -p 8080:8080 --add-host=host.docker.internal:host-gateway -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:main

# Verifikasi instalasi Open WebUI (dengan memeriksa kontainer Docker)
if sudo docker ps -a | grep -q "open-webui"; then
    log_message "Open WebUI berhasil diinstal dan sedang berjalan di Docker."
    log_message "Anda dapat mengakses Open WebUI di browser Anda melalui: http://localhost:8080"
else
    log_message "Open WebUI gagal diinstal. Harap periksa log di atas."
    exit 1
fi

# --- 4. Pemecahan Masalah (Opsional, jika ada masalah komunikasi Docker-Ollama) ---
log_message "Mengkonfigurasi Ollama untuk komunikasi dengan Docker (pemecahan masalah opsional)..."

# Buat direktori systemd override jika belum ada
sudo mkdir -p /etc/systemd/system/ollama.service.d/

# Buat file override untuk layanan Ollama
# Ini akan menambahkan variabel lingkungan OLLAMA_HOST untuk memungkinkan komunikasi dari Docker
sudo bash -c 'cat << EOF > /etc/systemd/system/ollama.service.d/override.conf
[Service]
Environment="OLLAMA_HOST=0.0.0.0"
EOF'

# Muat ulang konfigurasi systemd
sudo systemctl daemon-reload

# Restart layanan Ollama
sudo systemctl restart ollama

log_message "Konfigurasi Ollama untuk komunikasi Docker telah diterapkan dan layanan Ollama di-restart."

# --- 5. Konfigurasi Domain Kustom untuk Open WebUI dengan Nginx ---
log_message "Memulai konfigurasi domain kustom untuk Open WebUI."

read -p "Masukkan domain yang ingin Anda gunakan untuk Open WebUI (misalnya, webui.domainanda.com): " CUSTOM_DOMAIN

if [ -z "$CUSTOM_DOMAIN" ]; then
    log_message "Domain tidak dimasukkan. Open WebUI akan tetap dapat diakses melalui http://localhost:8080."
else
    log_message "Domain yang Anda masukkan: $CUSTOM_DOMAIN"

    # Instal Nginx jika belum terinstal
    if ! command -v nginx &> /dev/null; then
        log_message "Nginx tidak ditemukan. Menginstal Nginx..."
        sudo apt update
        sudo apt install nginx -y
        if [ $? -ne 0 ]; then
            log_message "Gagal menginstal Nginx. Harap periksa koneksi internet atau repositori Anda."
            exit 1
        fi
        log_message "Nginx berhasil diinstal."
    else
        log_message "Nginx sudah terinstal. Melanjutkan konfigurasi."
    fi

    # Buat file konfigurasi Nginx baru (untuk HTTP awal agar Certbot bisa memvalidasi)
    NGINX_CONF_FILE="/etc/nginx/sites-available/openwebui.conf"
    log_message "Membuat file konfigurasi Nginx: $NGINX_CONF_FILE"

    sudo bash -c "cat << EOF > $NGINX_CONF_FILE
server {
    listen 80;
    server_name $CUSTOM_DOMAIN;

    location / {
        proxy_pass http://localhost:8080;
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto \$scheme;
    }
}
EOF"

    # Hapus symlink lama jika ada
    sudo rm -f /etc/nginx/sites-enabled/openwebui.conf

    # Aktifkan konfigurasi Nginx
    log_message "Mengaktifkan konfigurasi Nginx untuk $CUSTOM_DOMAIN."
    sudo ln -s $NGINX_CONF_FILE /etc/nginx/sites-enabled/

    # Uji konfigurasi Nginx
    log_message "Menguji konfigurasi Nginx..."
    sudo nginx -t
    if [ $? -ne 0 ]; then
        log_message "Konfigurasi Nginx memiliki kesalahan. Harap periksa file $NGINX_CONF_FILE."
        exit 1
    fi

    # Restart layanan Nginx
    log_message "Memuat ulang dan me-restart layanan Nginx..."
    sudo systemctl restart nginx
    if [ $? -ne 0 ]; then
        log_message "Gagal me-restart Nginx. Harap periksa status layanan Nginx."
        exit 1
    fi

    log_message "Nginx berhasil dikonfigurasi sebagai reverse proxy HTTP untuk $CUSTOM_DOMAIN."

    # --- 6. Konfigurasi UFW (Uncomplicated Firewall) ---
    log_message "Memulai konfigurasi UFW (Uncomplicated Firewall)..."

    # Instal UFW jika belum terinstal
    if ! command -v ufw &> /dev/null; then
        log_message "UFW tidak ditemukan. Menginstal UFW..."
        sudo apt update
        sudo apt install ufw -y
        if [ $? -ne 0 ]; then
            log_message "Gagal menginstal UFW. Harap periksa koneksi internet Anda."
            exit 1
        fi
        log_message "UFW berhasil diinstal."
    else
        log_message "UFW sudah terinstal. Melanjutkan konfigurasi."
    fi

    # Pastikan SSH diizinkan sebelum mengaktifkan firewall untuk mencegah lockout
    log_message "Menambahkan aturan UFW: Mengizinkan SSH (Port 22)..."
    sudo ufw allow 22/tcp

    # Izinkan port HTTP (80) untuk Nginx/web (penting untuk validasi Certbot)
    log_message "Menambahkan aturan UFW: Mengizinkan HTTP (Port 80)..."
    sudo ufw allow 80/tcp

    # Izinkan port HTTPS (443) untuk Nginx/web (untuk SSL)
    log_message "Menambahkan aturan UFW: Mengizinkan HTTPS (Port 443)..."
    sudo ufw allow 443/tcp

    # Izinkan port 8080 untuk Open WebUI (akses internal)
    log_message "Menambahkan aturan UFW: Mengizinkan Open WebUI (Port 8080)..."
    sudo ufw allow 8080/tcp

    # Aktifkan UFW jika belum aktif
    if ! sudo ufw status | grep -q "Status: active"; then
        log_message "Mengaktifkan UFW. Anda mungkin akan diminta untuk mengkonfirmasi."
        echo "y" | sudo ufw enable
        if [ $? -eq 0 ]; then
            log_message "UFW berhasil diaktifkan dengan aturan yang diperlukan."
            log_message "Status UFW saat ini:"
            sudo ufw status verbose
        else
            log_message "Gagal mengaktifkan UFW. Harap periksa log di atas."
            exit 1
        fi
    else
        log_message "UFW sudah aktif. Aturan telah ditambahkan."
        log_message "Status UFW saat ini:"
        sudo ufw status verbose
    fi


    # --- 7. Instalasi dan Konfigurasi Let's Encrypt SSL dengan Certbot ---
    log_message "Memulai instalasi dan konfigurasi SSL dengan Let's Encrypt (Certbot)..."

    # Instal Certbot dan plugin Nginx-nya
    sudo apt update
    sudo apt install certbot python3-certbot-nginx -y

    # Jalankan Certbot untuk mendapatkan dan menginstal sertifikat SSL
    log_message "Menjalankan Certbot untuk mendapatkan sertifikat SSL untuk $CUSTOM_DOMAIN."
    log_message "Ikuti petunjuk Certbot. Anda akan diminta untuk email dan persetujuan ToS."
    sudo certbot --nginx -d "$CUSTOM_DOMAIN" --agree-tos --redirect --hsts --staple-ocsp --email YOUR_EMAIL@example.com

    if [ $? -eq 0 ]; then
        log_message "Sertifikat SSL berhasil diinstal untuk $CUSTOM_DOMAIN!"
        log_message "Konfigurasi Nginx telah diperbarui untuk menggunakan HTTPS dan mengalihkan HTTP ke HTTPS."
        log_message "Anda sekarang dapat mengakses Open WebUI melalui: https://$CUSTOM_DOMAIN"

        # Tes perpanjangan otomatis sertifikat
        log_message "Menguji perpanjangan otomatis sertifikat Certbot..."
        sudo certbot renew --dry-run
        if [ $? -eq 0 ]; then
            log_message "Perpanjangan otomatis Certbot berhasil diuji."
        else
            log_message "Pengujian perpanjangan otomatis Certbot gagal. Periksa log Certbot."
        fi
    else
        log_message "Gagal mendapatkan atau menginstal sertifikat SSL untuk $CUSTOM_DOMAIN."
        log_message "Pastikan domain Anda sudah mengarah ke IP server ini dan port 80/443 tidak terhalang."
        log_message "Anda masih dapat mengakses Open WebUI melalui http://localhost:8080."
    fi

fi # End of if [ -z "$CUSTOM_DOMAIN" ]

log_message "Instalasi dan konfigurasi selesai!"
log_message "Ingat untuk logout dan login kembali agar perubahan grup Docker berlaku."
