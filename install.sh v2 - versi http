#!/bin/bash

# ==============================================================================
# Skrip Instalasi Otomatis untuk Ollama, Docker, dan Open WebUI
# Dirancang untuk distribusi Linux berbasis Debian/Ubuntu.
# VERSI INI DIRANCANG UNTUK DIJALANKAN DENGAN 'sudo'
# ==============================================================================

# --- Variabel Konfigurasi ---
WEBUI_PORT=8080
WEBUI_IMAGE_TAG="main"
OLLAMA_PREPULL_MODEL="deepseek-r1:1.5b"

# --- Fungsi Bantuan dan Warna ---
set -e
set -o pipefail

BLUE='\033[0;34m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m'

log_info() {
    echo -e "\n${BLUE}----------------------------------------------------${NC}"
    echo -e "${BLUE}$1${NC}"
    echo -e "${BLUE}----------------------------------------------------${NC}"
}

log_success() {
    echo -e "${GREEN}$1${NC}"
}

log_warn() {
    echo -e "${YELLOW}$1${NC}"
}

# Variabel ORIGINAL_USER akan menampung nama pengguna yang menjalankan sudo.
# Ini penting agar pengguna yang benar ditambahkan ke grup docker, bukan 'root'.
ORIGINAL_USER="${SUDO_USER:-$USER}"

# ==============================================================================
# --- 1. Instalasi Ollama ---
# ==============================================================================
log_info "Memulai instalasi Ollama..."

if command -v ollama &> /dev/null; then
    log_success "Ollama sudah terinstal. Melewati instalasi."
else
    curl -fsSL https://ollama.com/install.sh | sh
    if command -v ollama &> /dev/null; then
        log_success "Ollama berhasil diinstal."
    else
        log_warn "Ollama gagal diinstal. Harap periksa log di atas."
        exit 1
    fi
fi

# ==============================================================================
# --- 2. Instalasi Docker ---
# ==============================================================================
log_info "Memulai instalasi Docker..."

if command -v docker &> /dev/null; then
    log_success "Docker sudah terinstal. Melewati instalasi."
else
    log_info "Menghapus instalasi Docker lama (jika ada)..."
    for pkg in docker.io docker-doc docker-compose docker-ce docker-ce-cli containerd.io runc; do
        apt-get remove -y $pkg >/dev/null 2>&1 || true
    done

    log_info "Menginstal dependensi dan kunci GPG Docker..."
    apt-get update
    apt-get install -y ca-certificates curl gnupg
    install -m 0755 -d /etc/apt/keyrings
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg
    chmod a+r /etc/apt/keyrings/docker.gpg

    echo \
      "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
      $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
      tee /etc/apt/sources.list.d/docker.list > /dev/null
    apt-get update

    log_info "Menginstal Docker Engine..."
    apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
    log_success "Docker Engine berhasil diinstal."
fi

if ! getent group docker | grep -q "\b$ORIGINAL_USER\b"; then
    log_info "Menambahkan pengguna '$ORIGINAL_USER' ke grup Docker..."
    usermod -aG docker "$ORIGINAL_USER"
    log_warn "PENTING: Pengguna '$ORIGINAL_USER' harus LOGOUT dan LOGIN kembali agar perubahan grup Docker berlaku!"
fi

log_info "Memverifikasi fungsionalitas Docker..."
if docker run hello-world >/dev/null; then
    log_success "Docker berhasil diinstal dan berfungsi dengan benar."
else
    log_warn "Docker gagal berfungsi. Harap periksa log di atas."
    exit 1
fi

# ==============================================================================
# --- 3. Konfigurasi Ollama untuk Integrasi Docker ---
# ==============================================================================
log_info "Mengkonfigurasi Ollama untuk komunikasi dengan Docker..."

mkdir -p /etc/systemd/system/ollama.service.d/
bash -c 'cat << EOF > /etc/systemd/system/ollama.service.d/override.conf
[Service]
Environment="OLLAMA_HOST=0.0.0.0"
EOF'

log_info "Menerapkan konfigurasi baru dan me-restart layanan Ollama..."
systemctl daemon-reload
systemctl restart ollama
log_success "Konfigurasi Ollama untuk komunikasi Docker telah diterapkan."

# ==============================================================================
# --- 4. Pra-instalasi Model Ollama ---
# ==============================================================================
if [[ -n "$OLLAMA_PREPULL_MODEL" ]]; then
    log_info "Memulai pra-unduh model: $OLLAMA_PREPULL_MODEL"
    log_info "Ini mungkin memakan waktu beberapa menit tergantung koneksi internet Anda..."
    ollama pull "$OLLAMA_PREPULL_MODEL"
    log_success "Model '$OLLAMA_PREPULL_MODEL' berhasil diunduh."
else
    log_info "Variabel OLLAMA_PREPULL_MODEL kosong, melewati pra-unduh model."
fi

# ==============================================================================
# --- 5. Instalasi Open WebUI ---
# ==============================================================================
log_info "Memulai instalasi Open WebUI..."

if [ "$(docker ps -a -q -f name=open-webui)" ]; then
    log_info "Kontainer Open WebUI lama ditemukan. Menghentikan dan menghapusnya..."
    docker stop open-webui
    docker rm open-webui
fi

log_info "Menjalankan kontainer Open WebUI..."
docker run -d \
    -p ${WEBUI_PORT}:8080 \
    --add-host=host.docker.internal:host-gateway \
    -v open-webui:/app/backend/data \
    --name open-webui \
    --restart always \
    "ghcr.io/open-webui/open-webui:${WEBUI_IMAGE_TAG}"

log_info "Memverifikasi status kontainer Open WebUI..."
sleep 5

if docker ps --filter "name=open-webui" --filter "status=running" -q; then
    log_success "âœ… Instalasi Selesai!"
    log_success "Open WebUI berhasil diinstal dan berjalan."
    echo -e "\n${GREEN}Anda dapat mengakses Open WebUI di browser Anda melalui:${NC}"
    echo -e "${YELLOW}http://localhost:${WEBUI_PORT}${NC}"
    echo ""
    log_warn "INGAT: Pengguna '$ORIGINAL_USER' harus LOGOUT dan LOGIN kembali agar perubahan grup Docker berlaku."
else
    log_warn "ðŸ”´ Open WebUI gagal berjalan. Harap periksa log kontainer."
    log_warn "Jalankan perintah berikut untuk melihat log: docker logs open-webui"
    exit 1
fi
