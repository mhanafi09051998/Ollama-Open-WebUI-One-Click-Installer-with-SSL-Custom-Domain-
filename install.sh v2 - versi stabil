#!/bin/bash

# Pastikan skrip dijalankan dengan hak akses root
if [ "$(id -u)" -ne 0 ]; then
  echo "Skrip ini harus dijalankan sebagai root atau dengan sudo." >&2
  exit 1
fi

# Fungsi untuk menampilkan pesan status
log_message() {
    echo "===================================================="
    echo "=> $1"
    echo "===================================================="
}

# --- 0. Input dari Pengguna ---
log_message "Meminta informasi yang diperlukan..."

read -p "Masukkan nama domain Anda (contoh: my-ollama.example.com): " DOMAIN_NAME
if [ -z "$DOMAIN_NAME" ]; then
    log_message "Nama domain tidak boleh kosong. Instalasi dibatalkan."
    exit 1
fi

read -p "Masukkan alamat email Anda (digunakan untuk notifikasi SSL Let's Encrypt): " EMAIL
if [ -z "$EMAIL" ]; then
    log_message "Alamat email tidak boleh kosong. Instalasi dibatalkan."
    exit 1
fi

log_message "Instalasi akan dilanjutkan untuk domain: $DOMAIN_NAME"
sleep 3

# --- 1. Instalasi Dependensi & Validasi DNS ---
log_message "Memperbarui sistem dan menginstal dependensi..."
apt-get update
# Menambahkan dnsutils untuk validasi domain
apt-get install -y curl gnupg ca-certificates dnsutils

# --- 1.5. Validasi DNS Domain (Hanya IPv4) ---
log_message "Memvalidasi DNS untuk domain $DOMAIN_NAME (menggunakan IPv4)..."

# Dapatkan IP publik IPv4 server ini
SERVER_IP=$(curl -4 -s https://ifconfig.me/ip)
if [ -z "$SERVER_IP" ]; then
    log_message "Gagal mendapatkan IP publik dari ifconfig.me. Mencoba api.ipify.org..."
    SERVER_IP=$(curl -4 -s https://api.ipify.org)
    if [ -z "$SERVER_IP" ]; then
        log_message "Tidak dapat menentukan IP publik IPv4 server. Instalasi dibatalkan."
        exit 1
    fi
fi
log_message "IP Publik IPv4 Server ini adalah: $SERVER_IP"

# Dapatkan IP yang terhubung dengan domain menggunakan dig (hanya A record untuk IPv4)
DOMAIN_IP=$(dig +short "$DOMAIN_NAME" A | head -n 1)
if [ -z "$DOMAIN_IP" ]; then
    log_message "VALIDASI GAGAL: Tidak dapat menemukan A record (IPv4) untuk domain '$DOMAIN_NAME'."
    echo "Pastikan Anda telah membuat A record di pengaturan DNS provider Anda yang mengarah ke IP server."
    log_message "Instalasi dibatalkan."
    exit 1
fi
log_message "Domain '$DOMAIN_NAME' saat ini mengarah ke IP: $DOMAIN_IP"

# Bandingkan IP server dengan IP domain
if [ "$SERVER_IP" != "$DOMAIN_IP" ]; then
    log_message "VALIDASI GAGAL: IP tidak cocok!"
    echo "IP publik server Anda ($SERVER_IP) tidak cocok dengan IP yang terhubung ke domain Anda ($DOMAIN_IP)."
    echo "Harap perbarui A record untuk '$DOMAIN_NAME' di DNS provider Anda agar mengarah ke $SERVER_IP."
    echo "Catatan: Mungkin perlu beberapa waktu (hingga 24 jam) agar perubahan DNS menyebar ke seluruh dunia."
    log_message "Instalasi dibatalkan."
    exit 1
else
    log_message "Validasi DNS berhasil! Domain mengarah ke server ini."
fi
sleep 3


# --- 2. Instalasi Docker ---
log_message "Memulai instalasi Docker..."

# Hapus versi Docker lama jika ada
for pkg in docker.io docker-doc docker-compose docker-ce docker-ce-cli containerd.io runc; do apt-get remove -y $pkg; done

# Tambahkan kunci GPG resmi Docker
install -m 0755 -d /etc/apt/keyrings
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg
chmod a+r /etc/apt/keyrings/docker.gpg

# Tambahkan repositori Docker ke sumber APT
echo \
  "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
  $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
  tee /etc/apt/sources.list.d/docker.list > /dev/null

# Perbarui indeks paket dan instal Docker
apt-get update
apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

# Tambahkan pengguna non-root ke grup docker (jika ada)
if [ -n "$SUDO_USER" ]; then
    usermod -aG docker "$SUDO_USER"
    log_message "Pengguna '$SUDO_USER' telah ditambahkan ke grup Docker. Perubahan akan aktif setelah login ulang."
fi

# Verifikasi instalasi Docker
if ! docker run hello-world &> /dev/null; then
    log_message "Docker gagal diinstal atau tidak berfungsi. Periksa log di atas."
    exit 1
else
    log_message "Docker berhasil diinstal dan berfungsi."
fi

# --- 3. Instalasi Ollama ---
log_message "Memulai instalasi Ollama..."
curl -fsSL https://ollama.com/install.sh | sh

# Verifikasi instalasi Ollama
if ! command -v ollama &> /dev/null; then
    log_message "Ollama gagal diinstal. Periksa log di atas."
    exit 1
fi

# Konfigurasi Ollama agar dapat diakses oleh Docker
log_message "Mengkonfigurasi Ollama untuk komunikasi dengan Docker..."
mkdir -p /etc/systemd/system/ollama.service.d/
cat << EOF > /etc/systemd/system/ollama.service.d/override.conf
[Service]
Environment="OLLAMA_HOST=0.0.0.0"
EOF

systemctl daemon-reload
systemctl restart ollama

log_message "Ollama berhasil diinstal dan dikonfigurasi."

# --- 3.5. Pre-install Model ---
log_message "Mengunduh model deepseek-r1:1.5b (ini mungkin memakan waktu)..."
ollama pull deepseek-r1:1.5b

# Verifikasi sederhana dengan memeriksa daftar model
if ollama list | grep -q "deepseek-r1:1.5b"; then
    log_message "Model deepseek-r1:1.5b berhasil diunduh."
else
    log_message "Peringatan: Gagal mengunduh model deepseek-r1:1.5b. Anda dapat melakukannya secara manual nanti."
fi

# --- 4. Instalasi & Konfigurasi Nginx ---
log_message "Menginstal Nginx sebagai reverse proxy..."
apt-get install -y nginx

# Buat file konfigurasi Nginx untuk Open WebUI
log_message "Membuat konfigurasi Nginx untuk domain $DOMAIN_NAME..."
cat << EOF > /etc/nginx/sites-available/$DOMAIN_NAME
server {
    listen 80;
    server_name $DOMAIN_NAME;

    location / {
        proxy_pass http://localhost:8080;
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto \$scheme;
        proxy_buffering off;
        proxy_http_version 1.1;
        proxy_set_header Upgrade \$http_upgrade;
        proxy_set_header Connection "upgrade";
    }
}
EOF

# Aktifkan site dan hapus link default
ln -s /etc/nginx/sites-available/$DOMAIN_NAME /etc/nginx/sites-enabled/
rm -f /etc/nginx/sites-enabled/default

# Uji konfigurasi Nginx
if ! nginx -t; then
    log_message "Konfigurasi Nginx gagal. Periksa error di atas."
    exit 1
fi

# Restart Nginx untuk menerapkan perubahan
systemctl restart nginx
log_message "Nginx berhasil diinstal dan dikonfigurasi."

# --- 5. Konfigurasi Firewall (UFW) ---
log_message "Mengkonfigurasi firewall (UFW)..."
ufw --force enable
ufw allow 'OpenSSH'
ufw allow 'Nginx Full'
ufw reload

log_message "Firewall diaktifkan dan dikonfigurasi untuk mengizinkan traffic SSH dan Web."

# --- 6. Jalankan Open WebUI dengan Docker ---
log_message "Memulai Open WebUI menggunakan Docker..."
# Pastikan tidak ada kontainer dengan nama yang sama
docker rm -f open-webui &> /dev/null
docker run -d -p 127.0.0.1:8080:8080 --add-host=host.docker.internal:host-gateway -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:main

# Verifikasi kontainer berjalan
sleep 5
if ! docker ps -a | grep -q "open-webui"; then
    log_message "Open WebUI gagal dijalankan. Periksa log Docker."
    exit 1
fi
log_message "Open WebUI berhasil dijalankan di Docker."

# --- 7. Instalasi SSL dengan Certbot (Let's Encrypt) ---
log_message "Menginstal Certbot untuk SSL..."
apt-get install -y certbot python3-certbot-nginx

log_message "Memperoleh sertifikat SSL untuk $DOMAIN_NAME..."
certbot --nginx -d "$DOMAIN_NAME" --non-interactive --agree-tos -m "$EMAIL" --redirect

# Verifikasi pembaruan otomatis Certbot
if ! systemctl list-timers | grep -q 'certbot.timer'; then
    log_message "Peringatan: Pembaruan otomatis SSL Certbot mungkin tidak aktif."
else
    log_message "Pembaruan otomatis SSL berhasil dikonfigurasi."
fi

# --- Selesai ---
log_message "INSTALASI SELESAI!"
echo
echo "Selamat! Open WebUI Anda sekarang dapat diakses melalui:"
echo "https://$DOMAIN_NAME"
echo
echo "Penting: Jika Anda menjalankan skrip ini tanpa sudo, harap logout dan login kembali agar perubahan grup Docker untuk pengguna Anda berlaku."
echo
