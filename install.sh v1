#!/bin/bash

# Fungsi untuk menampilkan pesan status
log_message() {
    echo "----------------------------------------------------"
    echo "$1"
    echo "----------------------------------------------------"
}

# --- 1. Instalasi Ollama ---
log_message "Memulai instalasi Ollama..."

# Unduh dan instal Ollama
curl -fsSL https://ollama.com/install.sh | sh

# Verifikasi instalasi Ollama
if command -v ollama &> /dev/null; then
    log_message "Ollama berhasil diinstal."
else
    log_message "Ollama gagal diinstal. Harap periksa log di atas."
    exit 1
fi

# Catatan: Pemilihan dan pengunduhan model (e.g., Llama 3.2 1B)
# akan dilakukan secara manual setelah instalasi atau melalui Open WebUI.
# Contoh: ollama run llama3

# --- 2. Instalasi Docker ---
log_message "Memulai instalasi Docker..."

# Hapus versi Docker lama jika ada
for pkg in docker.io docker-doc docker-compose docker-ce docker-ce-cli containerd.io runc; do sudo apt-get remove $pkg; done

# Perbarui indeks paket apt dan instal paket yang diperlukan
sudo apt-get update
sudo apt-get install ca-certificates curl gnupg -y

# Tambahkan kunci GPG resmi Docker
sudo install -m 0755 -d /etc/apt/keyrings
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
sudo chmod a+r /etc/apt/keyrings/docker.gpg

# Tambahkan repositori Docker ke sumber APT
echo \
  "deb [arch="$(dpkg --print-architecture)" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
  "$(. /etc/os-release && echo "$VERSION_CODENAME")" stable" | \
  sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

# Perbarui indeks paket apt lagi
sudo apt-get update

# Instal Docker Engine, containerd, dan Docker Compose
sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin -y

# Tambahkan pengguna saat ini ke grup docker (agar tidak perlu sudo untuk menjalankan perintah docker)
sudo usermod -aG docker "$USER"

# Verifikasi instalasi Docker
if sudo docker run hello-world &> /dev/null; then
    log_message "Docker berhasil diinstal dan berfungsi."
else
    log_message "Docker gagal diinstal atau tidak berfungsi. Harap periksa log di atas."
    exit 1
fi

log_message "Harap logout dan login kembali atau restart terminal Anda agar perubahan grup Docker berlaku."

# --- 3. Instalasi Open WebUI ---
log_message "Memulai instalasi Open WebUI..."

# Jalankan Open WebUI menggunakan Docker
# Pastikan port 8080 tersedia
sudo docker run -d -p 8080:8080 --add-host=host.docker.internal:host-gateway -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:main

# Verifikasi instalasi Open WebUI (dengan memeriksa kontainer Docker)
if sudo docker ps -a | grep -q "open-webui"; then
    log_message "Open WebUI berhasil diinstal dan sedang berjalan di Docker."
    log_message "Anda dapat mengakses Open WebUI di browser Anda melalui: http://localhost:8080"
else
    log_message "Open WebUI gagal diinstal. Harap periksa log di atas."
    exit 1
fi

# --- 4. Pemecahan Masalah (Opsional, jika ada masalah komunikasi Docker-Ollama) ---
log_message "Mengkonfigurasi Ollama untuk komunikasi dengan Docker (pemecahan masalah opsional)..."

# Buat direktori systemd override jika belum ada
sudo mkdir -p /etc/systemd/system/ollama.service.d/

# Buat file override untuk layanan Ollama
# Ini akan menambahkan variabel lingkungan OLLAMA_HOST untuk memungkinkan komunikasi dari Docker
sudo bash -c 'cat << EOF > /etc/systemd/system/ollama.service.d/override.conf
[Service]
Environment="OLLAMA_HOST=0.0.0.0"
EOF'

# Muat ulang konfigurasi systemd
sudo systemctl daemon-reload

# Restart layanan Ollama
sudo systemctl restart ollama

log_message "Konfigurasi Ollama untuk komunikasi Docker telah diterapkan dan layanan Ollama di-restart."

log_message "Instalasi selesai! Anda sekarang dapat mengakses Open WebUI di http://localhost:8080"
log_message "Ingat untuk logout dan login kembali agar perubahan grup Docker berlaku."
