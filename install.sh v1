#!/usr/bin/env bash
set -euo pipefail

# If Docker is not already installed, install it along with dependencies:contentReference[oaicite:0]{index=0}:contentReference[oaicite:1]{index=1}.
if ! command -v docker &> /dev/null; then
    # Remove old, conflicting Docker packages if present:contentReference[oaicite:2]{index=2}.
    sudo apt-get remove -y docker.io docker-doc docker-compose docker-compose-v2 podman-docker containerd runc || true

    # Install prerequisites for apt over HTTPS (ca-certificates, curl, etc.):contentReference[oaicite:3]{index=3}.
    sudo apt-get update
    sudo apt-get install -y ca-certificates curl gnupg lsb-release

    # Add Dockerâ€™s official GPG key and repository:contentReference[oaicite:4]{index=4}:contentReference[oaicite:5]{index=5}.
    sudo mkdir -p /etc/apt/keyrings
    sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg \
      | sudo tee /etc/apt/keyrings/docker.asc > /dev/null
    sudo chmod a+r /etc/apt/keyrings/docker.asc
    echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] \
      https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" \
      | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
    sudo apt-get update

    # Install Docker Engine (docker-ce) and related components:contentReference[oaicite:6]{index=6}.
    sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

    # (Optional) Allow running Docker without sudo by adding current user to 'docker' group:contentReference[oaicite:7]{index=7}.
    sudo usermod -aG docker "$USER"
fi

# Install Ollama for x86_64 (CPU-only) if not already installed:contentReference[oaicite:8]{index=8}.
if ! command -v ollama &> /dev/null; then
    # Download and extract the Ollama Linux package (CPU-only) to /usr.
    curl -fsSL https://ollama.com/download/ollama-linux-amd64.tgz -o ollama-linux-amd64.tgz
    sudo tar -C /usr -xzf ollama-linux-amd64.tgz
    rm ollama-linux-amd64.tgz
fi

# Create a dedicated system user for Ollama (non-login, system account):contentReference[oaicite:9]{index=9}.
if ! id -u ollama > /dev/null 2>&1; then
    sudo useradd -r -s /bin/false -m -d /usr/share/ollama ollama
fi

# Create or overwrite the systemd service file for Ollama:contentReference[oaicite:10]{index=10}.
# This will run 'ollama serve' on startup under the 'ollama' user.
sudo tee /etc/systemd/system/ollama.service > /dev/null << 'EOF'
[Unit]
Description=Ollama Service
After=network-online.target

[Service]
ExecStart=/usr/bin/ollama serve
User=ollama
Group=ollama
Restart=always
RestartSec=3
Environment="OLLAMA_HOST=0.0.0.0"

[Install]
WantedBy=multi-user.target
EOF

# Reload systemd, enable Ollama to start on boot, and start the service:contentReference[oaicite:11]{index=11}.
sudo systemctl daemon-reload
sudo systemctl enable ollama
sudo systemctl start ollama

# Run Open WebUI in a Docker container, exposed on port 3000 in the browser:contentReference[oaicite:12]{index=12}.
# This will map container port 8080 to host port 3000 and persist data in a Docker volume.
docker run -d -p 3000:8080 --add-host=host.docker.internal:host-gateway \
    -v open-webui:/app/backend/data \
    --name open-webui --restart always ghcr.io/open-webui/open-webui:main

echo "Installation complete. Open WebUI is accessible at http://localhost:3000"
